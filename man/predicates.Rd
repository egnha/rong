% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicates.R
\name{predicates}
\alias{predicates}
\title{Basic predicates for validation}
\description{
The following predicate functions augment predicates from the
\pkg{base} and \pkg{rlang} packages to enable them to produce informative
error messages when used as checks in \code{\link[=fasten]{fasten()}}, \code{\link[=firmly]{firmly()}}, \code{\link[=validify]{validify()}},
\code{\link[=validate]{validate()}}.
\itemize{
\item \link[=predicates-boolean]{Boolean predicates}
\item \link[=predicates-object]{Object predicates}
\item \link[=predicates-pattern]{Pattern predicates}
\item \link[=predicates-property]{Property predicates}
\item \link[=predicates-relational]{Relational predicates}
\item \link[=predicates-set]{Set predicates}
\item \link[=predicates-type]{Type predicates}
}
}
\examples{
## vld_double() and rlang::is_double() are identical as functions
vld_double(runif(2))
vld_double(runif(2), n = 1)
vld_double(1:2)
rlang::is_double(runif(2))
rlang::is_double(runif(2), n = 1)
rlang::is_double(1:2)

## But when rlang::is_double() is used in firmly(),
## it produces an auto-generated error message ...
\dontrun{
firmly(function(x) x, rlang::is_double(n = 1))(runif(2))}

## ... whereas vld_double() produces a specialized error message
\dontrun{
firmly(function(x) x, vld_double(n = 1))(runif(2))}

\dontrun{
validate(mtcars, is.matrix, {"cylinder" \%in\% names(.)})
validate(mtcars, vld_matrix, vld_has_name("cylinder"))}

}
