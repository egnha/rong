% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicates.R
\name{checker-type}
\alias{checker-type}
\title{Type checkers}
\arguments{
\item{\dots}{Expressions to validate.}

\item{n}{Length.}

\item{encoding}{Encoding of a string or character vector. One of \code{UTF-8},
\code{latin1}, or \code{unknown}.}
}
\description{
Type checkers
}
\examples{
f <- function(x, y, z) NULL

## Require all arguments to be integer (vectors)
foo <- firmly(f, vld_integer())
foo(0L, 1:2, length(letters))
\dontrun{
foo(0L, c(1, 2), length(letters))}

## Require all arguments to be scalar integers
bar <- firmly(f, vld_integer(n = 1))
bar(0L, 1L, length(NA))
\dontrun{
bar(0L, 1L, lengths(letters))}

## Require x, y to be character (vectors), and z to be an length-1 list
baz <- firmly(f, vld_character(x, y), vld_list(n = 1, z))
baz(letters, "text", list(1))
\dontrun{
baz(0, "text", list(1, 2))}

}
\seealso{
\itemize{
\item \link[rlang:type-predicates]{Type predicates}, which underlie the
length-dependent checkers (except \code{vld_numerical()})
\item \link[=checker-object]{Object checkers}, for verifying identities that are not
characterized by type, e.g., data frames, which have type \code{list}
}
}
\alias{vld_null}
\alias{vld_not_null}
\alias{vld_symbol}
\alias{vld_pairlist}
\alias{vld_closure}
\alias{vld_environment}
\alias{vld_language}
\alias{vld_atomic}
\alias{vld_vector}
\alias{vld_logical}
\alias{vld_boolean}
\alias{vld_numerical}
\alias{vld_number}
\alias{vld_integer}
\alias{vld_integerish}
\alias{vld_double}
\alias{vld_complex}
\alias{vld_character}
\alias{vld_string}
\alias{vld_list}
\alias{vld_raw}
\usage{
vld_null(...)

vld_not_null(...)

vld_symbol(...)

vld_pairlist(...)

vld_closure(...)

vld_environment(...)

vld_language(...)

vld_atomic(..., n = NULL)

vld_vector(..., n = NULL)

vld_logical(..., n = NULL)

vld_boolean(...)

vld_numerical(..., n = NULL)

vld_number(...)

vld_integer(..., n = NULL)

vld_integerish(..., n = NULL)

vld_double(..., n = NULL)

vld_complex(..., n = NULL)

vld_character(..., n = NULL, encoding = NULL)

vld_string(...)

vld_list(..., n = NULL)

vld_raw(..., n = NULL)
}
