% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predicates.R
\name{predicates-boolean}
\alias{predicates-boolean}
\title{Boolean predicates}
\arguments{
\item{x}{Object to test.}

\item{.f}{Function to map over the expressions to validate.}

\item{na.rm}{Should \code{NA} values be disregarded?}
}
\description{
Boolean predicates
}
\examples{
f <- function(x, y) NULL

## Require x, y to have the same length
foo <- firmly(f, chk_true(length(x) == length(y)))
foo(runif(3), rnorm(3))
\dontrun{
foo(runif(2), rnorm(3))}

## Require x to contain only non-empty objects
msg <- "{{.}} contains empty objects"
bar <- firmly(f, !! msg := chk_all_map(function(.) length(.) != 0, x))
bar(1:2)
\dontrun{
bar(list(1, NULL))}

## Or more efficiently, in a vectorized manner:
baz <- firmly(f, chk_all("x contains empty objects" := lengths(x) != 0))
baz(1:2)
\dontrun{
baz(list(1, NULL))}

}
\alias{chk_true}
\alias{chk_is}
\alias{chk_false}
\alias{chk_not}
\alias{chk_all}
\alias{chk_any}
\alias{chk_none}
\alias{chk_all_map}
\alias{chk_any_map}
\alias{chk_none_map}
\usage{
chk_true(x)

chk_is(x)

chk_false(x)

chk_not(x)

chk_all(x, na.rm = FALSE)

chk_any(x, na.rm = FALSE)

chk_none(x, na.rm = FALSE)

chk_all_map(x, .f, na.rm = FALSE)

chk_any_map(x, .f, na.rm = FALSE)

chk_none_map(x, .f, na.rm = FALSE)
}
