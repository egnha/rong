% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R
\name{firm_core}
\alias{firm_core}
\alias{firm_error}
\title{Decompose a firmly applied function}
\usage{
firm_core(x)

firm_error(x)
}
\arguments{
\item{x}{Object to decompose.}
}
\value{
If \code{x} is a firmly applied function:
\itemize{
\item \code{firm_core()} returns a function
\item \code{firm_error()} returns a character vector
}

In the absence of the component to be extracted, these functions return
\code{NULL} (in particular, whenever \code{x} is not of class \code{firm_closure}).
}
\description{
Decompose a firmly applied function (i.e., a function created by \code{\link[=firmly]{firmly()}}
or \code{\link[=fasten]{fasten()}}):
\itemize{
\item \code{firm_core()} extracts the underlying \dQuote{core} functionâ€”the function
that is called when all arguments are valid
\item \code{firm_error()} extracts the subclass of the error condition that is
signaled when an input validation error occurs
}
}
\details{
For primitive functions, \code{firm_core()} returns the underlying
function as a closure.
}
\examples{
f <- function(x, y, ...) NULL
ff <- firmly(f, is.numeric, {isTRUE(. > 0)}(x, y - x))
identical(firm_core(ff), f)
firm_error(ff)

}
\seealso{
\code{\link[=firmly]{firmly()}}
}
